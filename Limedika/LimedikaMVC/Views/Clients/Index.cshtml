@model X.PagedList.IPagedList<Common.Entities.Client>
@using X.PagedList;
@using X.PagedList.Mvc.Bootstrap4.Core
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Index";
}

<h1>Klientų sąrašas</h1>
<br />

@using (Html.BeginForm("Index"))
{
    <p>
        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)  
        <input type="submit" value="Paieška" /></p>
}

<div>
    <form asp-action="Upload" enctype="multipart/form-data" method="POST">
        <input type="file" name="file" accept=".json"/> 
        <input type="submit" value="Importuoti klientus"></>
    </form>
</div>
<br />
<p>
    <a asp-action="UpdatePostCodes">Atnaujinti pašto indeksus</a>
</p>
<p>
    <a asp-action="Create">Sukurti naują</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Pavadinimas", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Adresas", "Index", new { sortOrder = ViewBag.AddressSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Pašto kodas", "Index", new { sortOrder = ViewBag.PostCodeSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostCode)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }), Bootstrap4PagedListRenderOptions.ClassicPlusFirstAndLast)